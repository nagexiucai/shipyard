defaults: &defaults
  working_directory: /go/src/github.com/opsforgeio/shipyard
  docker:
    - image: circleci/golang:1.8

version: 2
jobs:
  go-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run GO test suite
          command: |
            go get -v -t -d ./...
            go get -d github.com/stretchr/testify/assert
            go get github.com/tools/godep
            bash test.sh

  build:
    working_directory: /go/src/github.com/opsforgeio/shipyard
    docker:
      - image: golang:1.8.5-jessie
    steps:
      - checkout
      - run:
          name: Set up build environment
          command: |
            curl -sL https://deb.nodesource.com/setup_9.x | bash -
            apt-get update
            apt-get install -y nodejs wget curl gzip build-essential
            apt-get clean
            npm install -g bower
            go get github.com/tools/godep
            wget -P /tmp https://download.docker.com/linux/static/stable/x86_64/docker-17.09.0-ce.tgz
            gunzip /tmp/docker-17.09.0-ce.tgz
            tar -xvf /tmp/docker-17.09.0-ce.tar -C /tmp
            cp /tmp/docker/docker /usr/local/bin/docker
            chmod +x /usr/local/bin/docker
            rm -rf /tmp/docker*
            go get -v -d ./...
            go get github.com/tools/godep
      - run:
          name: Build controller library
          command: |
            make build
            make media
      - persist_to_workspace:
          root: controller
          paths:
            - controller
            - static

  dryrun:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: controller
      - run:
          name: Build docker images
          command: |
            make image

  deploy:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: controller
      - run:
          name: Build and push docker images
          command: |
            make image
            make release

  smoketest-convscript:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploying shipyard using wrapper script
          command: |
            bash deploy/setup.sh
      - run:
          name: Using curl to verify shipyard accessibility on 8080
          command: |
            cd .circleci
            docker build -t curl .
            docker run -ti --link shipyard-controller curl -vILks http://shipyard-controller:8080 &>/dev/null
      - run:
          name: Using curl to verify shipyard content on 8080
          command: |
            docker run -ti --link shipyard-controller curl -Lks http://shipyard-controller:8080 | grep -i 'ui-view' &>/dev/null

  smoketest-compose3:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploying shipyard using Docker Compose v3
          command: |
            cd deploy
            bash launch.sh
      - run:
          name: Using curl to verify shipyard accessibility on 8080
          command: |
            cd .circleci
            docker build -t curl .
            docker run -ti --link shipyard_controller_1 curl -vILks http://shipyard-controller:8080 &>/dev/null
      - run:
          name: Using curl to verify shipyard content on 8080
          command: |
            docker run -ti --link shipyard_controller_1 curl -Lks http://shipyard-controller:8080 | grep -i 'ui-view' &>/dev/null

workflows:
  version: 2
  shipyard-pipeline:
    jobs:
      - go-test
      - build:
          requires:
            - go-test
      - dryrun:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - dryrun
      - smoketest-convscript:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy
      - smoketest-compose3:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy
  shipyard-pipeline-nightly:
    triggers:
      - schedule:
          cron: "6 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - go-test
      - build:
          requires:
            - go-test
      - dryrun:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - dryrun
      - smoketest-convscript:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy
      - smoketest-compose3:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy
